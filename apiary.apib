FORMAT: X-1A
HOST: http://api.apiary.io/

# Apiary private API

Now you can test [intralinks](#reference/test-steps/test-steps/create)

## Group Test Jobs

### Test Jobs collection [/tests/runs]

#### Create a Test run [POST]

+ Request (application/json)

  ```
  {
    "blueprint": "My Api \n#My resource [/resource]\n# Action [GET]",
    "agent": 'travisci'
    "ci": true,
    "build_id": 1,
    "build_number": 1,
    "job_id": 1,
    "job_number": 1,
    "start_at": 1381924285,
    "end_at": 1381924299,
    "status": 'started'
  }
  ```

+ Response 201

#### Retrieve multiple test runs [GET]

+ Request

+ Response 200

  ```
  [
    {
      "blueprint": "My Api \n#My resource [/resource]\n# Action [GET]",
      "agent": 'travisci'
      "ci": true,
      "build_id": 1,
      "build_number": 1,
      "job_id": 1,
      "job_number": 1,
      "start_at": 1381924285,
      "end_at": 1381924299,
      "status": 'started'
    }
  ]
  ```


### Test run [/tests/run/{id}]
  
- Parameters
  - id (number) ... Unique id of the run in Apiary

- Model
  - Attributes
    - blueprint (string) ... Blueprint used for the test run
    - agent (string) ... Who performed the test
    - ci (boolean) ... True if test run is performed in some Continous Integration system
    - build_id (integer) ... Unique build ID in the particular CI system
    - build_number (integer) ... Sequential build ID unique for the project
    - job_id (integer) ... Unique build job ID in the particular CI systme
    - job_number (integer) ... Seqential build job unique for the build
    - start_at (integer) ... Unix timestamp when test run started
    - end_at (integer) ... Unix timestamp when test run ended
    - status (string) ... Test run result

  - Body

    ```
    {
      "blueprint": "My Api \n#My resource [/resource]\n# Action [GET]",
      "agent": "travisci"
      "ci": true,
      "build_id": 1,
      "build_number": 1,
      "job_id": 1,
      "job_number": 1,
      "start_at": 1381924285,
      "end_at": 1381924299,
      "status": "started"
    }
    ```

#### Update Attributes [PATCH]

+ Request
  
  ```
  {
    "ended_at": "1381924299" 
    "status": "passed"
  }
  ```

+ Response 204

### Retreive [GET]

+ Response 200


## Group Test Steps 

### Test steps [/tests/steps]

#### Create [POST]

#### Retrieve [GET]
  
  + Parameters
    + run_id (number, optional) Retreive steps by run ... 1

### Test step [/tests/steps/{id}]

####  Retreive

- Parameters
  - id (integer) ... Unique id of the step

- Model
  - Attributes
    - origin (object) ... Origin path of the step in the blueprint AST
      - group (string) ... Group name
      - resource (string) ... Resource name 
      - action (string) ... Action name
      - example (string) ... Example name
    - start_at (integer) ...
    - end_at (integer) ... Unix timestamp when step ended
    - result (string) ... Result of step execution
    - type (string) ... Type of the step, shuould be HTTP or Cucumber for instance
  
  - Body

    ```
    {
      "origin": {
        "group": "Machines",
        "resource": "Machines collection".
        "action": "Create a machine",
        "example": ""
      }, 
      "start_at": 1382017808,
      "end_at": 1382017808,
      "result": "failed",
      "type" "gavel",
      "data": {
        "real": {},
        "expected": {},
        "output" {}
      }
    }
    ```